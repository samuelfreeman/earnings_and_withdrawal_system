2025-02-04 18:36:40 [ERROR]: [object Object]
2025-02-04 18:38:08 [ERROR]: [object Object]
2025-02-04 18:38:51 [ERROR]: [object Object]
2025-02-04 18:39:25 [ERROR]: [object Object]
2025-02-04 18:40:01 [ERROR]: [object Object]
2025-02-04 18:40:55 [ERROR]: [object Object]
2025-02-04 18:42:03 [ERROR]: [object Object]
2025-02-04 18:42:37 [ERROR]: [object Object]
2025-02-04 18:46:06 [ERROR]: [object Object]
2025-02-04 18:52:08 [ERROR]: [object Object]
2025-02-04 18:54:26 [ERROR]: [object Object]
2025-02-04 18:56:02 [ERROR]: [object Object]
2025-02-04 18:56:32 [ERROR]: [object Object]
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field","value":":id"}],"status":400},"timestamp":"2025-02-04 18:57:42"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field","value":":id"}],"status":400},"timestamp":"2025-02-04 19:07:40"}
{"level":"error","message":"SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string","stack":"Error: SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string\n    at Object.continueSession (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/crypto/sasl.js:24:11)\n    at Client._handleAuthSASLContinue (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/client.js:271:18)\n    at Connection.emit (node:events:518:28)\n    at /home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)","timestamp":"2025-02-04 19:07:55"}
{"level":"error","message":"SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string","stack":"Error: SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string\n    at Object.continueSession (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/crypto/sasl.js:24:11)\n    at Client._handleAuthSASLContinue (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/client.js:271:18)\n    at Connection.emit (node:events:518:28)\n    at /home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)","timestamp":"2025-02-04 19:09:07"}
{"level":"error","message":"SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string","stack":"Error: SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string\n    at Object.continueSession (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/crypto/sasl.js:24:11)\n    at Client._handleAuthSASLContinue (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/client.js:271:18)\n    at Connection.emit (node:events:518:28)\n    at /home/sam/Documents/BackendTest/node_modules/.pnpm/pg@8.13.1/node_modules/pg/lib/connection.js:116:12\n    at Parser.parse (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:36:17)\n    at Socket.<anonymous> (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)","timestamp":"2025-02-04 19:09:18"}
{"code":"22P02","file":"numeric.c","length":151,"level":"error","line":"793","message":"update \"merchant\" set \"total_earnings\" = $1 where \"id\" = $2 returning * - invalid input syntax for type numeric: \"{\"sum\":\"1800.00\"}\"","name":"error","routine":"numeric_in","severity":"ERROR","stack":"error: update \"merchant\" set \"total_earnings\" = $1 where \"id\" = $2 returning * - invalid input syntax for type numeric: \"{\"sum\":\"1800.00\"}\"\n    at Parser.parseErrorMessage (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:283:98)\n    at Parser.handlePacket (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:122:29)\n    at Parser.parse (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:35:38)\n    at Socket.<anonymous> (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)","timestamp":"2025-02-04 19:52:36","where":"unnamed portal parameter $1 = '...'"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id is Required","path":"id","type":"field"},{"location":"params","msg":"Invalid value","path":"id","type":"field"},{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field"}],"status":400},"timestamp":"2025-02-04 20:27:13"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id is Required","path":"id","type":"field"},{"location":"params","msg":"Invalid value","path":"id","type":"field"},{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field"}],"status":400},"timestamp":"2025-02-04 20:27:17"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id is Required","path":"id","type":"field"},{"location":"params","msg":"Invalid value","path":"id","type":"field"},{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field"}],"status":400},"timestamp":"2025-02-04 20:27:25"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id is Required","path":"id","type":"field"},{"location":"params","msg":"Invalid value","path":"id","type":"field"},{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field"}],"status":400},"timestamp":"2025-02-04 20:27:30"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id is Required","path":"id","type":"field"},{"location":"params","msg":"Invalid value","path":"id","type":"field"},{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field"}],"status":400},"timestamp":"2025-02-04 20:27:39"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id is Required","path":"id","type":"field"},{"location":"params","msg":"Invalid value","path":"id","type":"field"},{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field"}],"status":400},"timestamp":"2025-02-04 20:27:45"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id is Required","path":"id","type":"field"},{"location":"params","msg":"Invalid value","path":"id","type":"field"},{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field"}],"status":400},"timestamp":"2025-02-04 20:28:25"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id is Required","path":"id","type":"field"},{"location":"params","msg":"Invalid value","path":"id","type":"field"},{"location":"params","msg":"Merchant Id must be a valid UUID","path":"id","type":"field"}],"status":400},"timestamp":"2025-02-04 20:28:38"}
{"code":"22P02","file":"uuid.c","length":143,"level":"error","line":"133","message":"select sum(\"amount\") as \"available_earnings\" from \"earning\" where \"merchant_id\" = $1 and \"is_withdrawn\" = $2 limit $3 - invalid input syntax for type uuid: \":merchantId\"","name":"error","routine":"string_to_uuid","severity":"ERROR","stack":"error: select sum(\"amount\") as \"available_earnings\" from \"earning\" where \"merchant_id\" = $1 and \"is_withdrawn\" = $2 limit $3 - invalid input syntax for type uuid: \":merchantId\"\n    at Parser.parseErrorMessage (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:283:98)\n    at Parser.handlePacket (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:122:29)\n    at Parser.parse (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/parser.js:35:38)\n    at Socket.<anonymous> (/home/sam/Documents/BackendTest/node_modules/.pnpm/pg-protocol@1.7.0/node_modules/pg-protocol/dist/index.js:11:42)\n    at Socket.emit (node:events:518:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Readable.push (node:internal/streams/readable:390:5)\n    at TCP.onStreamRead (node:internal/stream_base_commons:190:23)","timestamp":"2025-02-04 20:30:21","where":"unnamed portal parameter $1 = '...'"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id must be a valid UUID","path":"merchantId","type":"field","value":":merchantId"}],"status":400},"timestamp":"2025-02-04 20:32:38"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:32:42"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:32:45"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:33:52"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:36:08"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:36:24"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:36:55"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:37:07"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:37:28"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:37:49"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:38:15"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:38:38"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:38:47"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:39:00"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:39:14"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:40:13"}
{"level":"error","message":"Insufficient balance for withdrawal.","stack":"Error: Insufficient balance for withdrawal.\n    at exports.requestWithdrawal (/home/sam/Documents/BackendTest/src/services/withdrawal.service.js:15:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async exports.submitWithDrawalRequest (/home/sam/Documents/BackendTest/src/controllers/withdrawal.controller.js:11:24)","timestamp":"2025-02-04 20:43:35"}
{"level":"error","message":{"error":"Validation error","errors":[{"location":"params","msg":"Merchant Id must be a valid UUID","path":"merchantId","type":"field","value":":merchantId"}],"status":400},"timestamp":"2025-02-04 20:44:42"}
